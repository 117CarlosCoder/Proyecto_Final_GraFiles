services:
  vue-app:
    image: vuejs-cookbook/dockerize-vuejs-app:latest # Nombre de la imagen para la aplicación Vue
    container_name: vue-container
    build:
      context: ./my-vue-app  # Ruta a tu aplicación Vue.js
    ports:
      - "8081:80"  # Exponiendo el puerto 80 del contenedor en el puerto 8080
    depends_on:
      - springboot-app  # El contenedor de Vue dependerá del de Spring Boot para estar activo
    networks:
      - my-network

  springboot-app:
    image: springio/gs-spring-boot-docker:latest # Nombre de la imagen de tu aplicación Spring Boot
    container_name: spring-container
    build:
      context: ./home/carloslopez/Documentos/ProyectoFinal/Backend/API_GRAFILES_SPRING  # Ruta a tu aplicación Spring Boot
    ports:
      - "8080:8080"  # Exponiendo el puerto 8080 del contenedor en el puerto 8081
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/crud-demo  # Configura la URL de MongoDB en tu aplicación Spring Boot
    depends_on:
      - mongo   # Spring Boot depende de MongoDB
    networks:
      - my-network

  mongo:
    image: mongo:latest  # Imagen oficial de MongoDB
    container_name: mongo-container
    ports:
      - "27018:27017"  # Puerto de MongoDB
    volumes:
      - mongo-data:/data/db   # Persistencia de datos en un volumen
    networks:
      - my-network

networks:
  my-network:
    driver: bridge   # Red interna para la comunicación entre los contenedores

volumes:
  mongo-data:  # Definición del volumen para MongoD
